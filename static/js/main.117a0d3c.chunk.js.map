{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","start","setState","reverse","alphabet","ALPHABET","length","LENGTH","reset","this","goods","visibleGoods","sort","g1","g2","localeCompare","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"4IAeKA,E,iEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,kBAAM,EAAKC,SAAS,CAAEL,WAAW,KAP3C,EASEM,QAAU,kBAAM,EAAKD,UAAS,SAAAN,GAAK,MAAK,CAAEE,YAAaF,EAAME,gBAT/D,EAWEM,SAAW,kBAAM,EAAKF,SAAS,CAAEH,SAAUN,EAASY,YAXtD,EAaEC,OAAS,kBAAM,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAbpD,EAeEC,MAAQ,kBAAM,EAAKN,SAAS,CAC1BJ,YAAY,EACZC,SAAUN,EAASO,QAjBvB,4CAoBE,WACE,MAA4CS,KAAKb,MAAzCG,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAAYD,EAA9B,EAA8BA,UACxBa,EAxDV,SACEA,EACAX,EACAD,GAEA,IAAMa,EAAY,YAAOD,GAgBzB,OAdIX,IAAaN,EAASO,OACpBD,IAAaN,EAASY,UACxBM,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBf,IAAaN,EAASc,QACxBI,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGP,OAASQ,EAAGR,WAKxBR,EACKa,EAAaR,UAGfQ,EA+BSK,CAAkBtB,EAAiBK,EAAUD,GAE3D,OACE,qBAAKmB,UAAU,WAAf,SACIpB,EAYE,qCACE,sBAAKoB,UAAU,yCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,2CACVE,QAASV,KAAKL,SAHhB,iCAQA,wBACEc,KAAK,SACLD,UAAU,0CACVE,QAASV,KAAKH,OAHhB,4BAQA,wBACEY,KAAK,SACLD,UAAU,yCACVE,QAASV,KAAKN,QAHhB,qBAQA,wBACEe,KAAK,SACLD,UAAU,yCACVE,QAASV,KAAKD,MAHhB,sBAQF,qBAAKS,UAAU,oCAAf,SACE,qBAAKA,UAAU,oBAAf,SACGP,EAAMU,KAAI,SAAAC,GACT,OACE,8BACE,qBAEEJ,UAAU,qCAFZ,SAIGI,GAHIA,eAlDnB,wBACEJ,UAAU,oDACVC,KAAK,SACLC,QAASV,KAAKR,MAHhB,yBA5BZ,GAAyBqB,aCpDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.117a0d3c.chunk.js","sourcesContent":["import { Component } from 'react';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  start = () => this.setState({ isStarted: true });\n\n  reverse = () => this.setState(state => ({ isReversed: !state.isReversed }));\n\n  alphabet = () => this.setState({ sortType: SortType.ALPHABET });\n\n  length = () => this.setState({ sortType: SortType.LENGTH });\n\n  reset = () => this.setState({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  render() {\n    const { sortType, isReversed, isStarted } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App mt-6\">\n        {!isStarted\n          ? (\n            <button\n              className=\"button is-black is-large is-fullwidth is-outlined\"\n              type=\"button\"\n              onClick={this.start}\n            >\n              Start\n            </button>\n          )\n\n          : (\n            <>\n              <div className=\"buttons is-desktop is-flex is-centered\">\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-success is-outlined\"\n                  onClick={this.alphabet}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-danger is-outlined\"\n                  onClick={this.length}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-black is-outlined\"\n                  onClick={this.reverse}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-ghost is-outlined\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n              <div className=\"is-flex is-justify-content-center\">\n                <div className=\"has-text-centered\">\n                  {goods.map(good => {\n                    return (\n                      <div>\n                        <div\n                          key={good}\n                          className=\"box column is-info is-rounded mb-3\"\n                        >\n                          {good}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}